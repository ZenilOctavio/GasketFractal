(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function r(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(t){if(t.ep)return;t.ep=!0;const n=r(t);fetch(t.href,n)}})();var R=`#version 300 es\r
  in float aPointSize;\r
  in vec2 aPosition;\r
  in vec3 aColor;\r
  out vec3 oColor;\r

  void main() {\r
    gl_Position = vec4(aPosition, 0.0, 1.0); \r
    gl_PointSize = aPointSize;\r
    oColor = aColor;\r
  }`,B=`#version 300 es

  precision highp float;\r
  in vec3 oColor;\r
  out vec4 fragColor;

  void main(){\r
    fragColor = vec4(oColor, 1.0); \r
  }`;function O(e,o){const r=[void 0,void 0,void 0],a=document.querySelector("canvas");if(!a)return alert("unable to get canvas"),r;const t=a.getContext("webgl2");if(t==null)return alert("unable to initialize webgl"),r;const n=t.createProgram(),s=t.createShader(t.VERTEX_SHADER),l=t.createShader(t.FRAGMENT_SHADER);return n==null||s==null||l==null?(alert("unable to create program"),r):(t.shaderSource(s,e),t.compileShader(s),t.attachShader(n,s),t.shaderSource(l,o),t.compileShader(l),t.attachShader(n,l),t.linkProgram(n),t.getProgramParameter(n,t.LINK_STATUS)||(console.group(),console.error(t.getShaderInfoLog(s)??"Couldnt get vertex shader info log"),console.error(t.getShaderInfoLog(l)??"Couldnt get fragment shader info log"),console.groupEnd()),t.useProgram(n),[a,t,n])}function M(e,o){const r=e/4,a=o/8,t=e/2;return function(s,l){const c=s+t,d=l+t,u=Math.floor(d/r),y=Math.floor(c/a);let g;switch(u){case 0:g=Math.floor(y/2);break;case 1:y==1||y==2?g=4:g=5;break;case 2:y==2||y==3?g=6:g=7;break;case 3:g=8;break;default:g=-1;break}return g}}function F(e,o){const r=Math.cos(o),a=Math.sin(o),t=e.x*r-e.y*a,n=e.y*r+e.x*a;return{x:t,y:n}}function T(e,o,r){let a={x:e.x-o.x,y:e.y-o.y};return a=F(a,r),{x:a.x+o.x,y:a.y+o.y}}let i,h,b,C,S,E,m=100,f=[],p=1.4,P=1.4,I=0,v={x:0,y:0};function _(){let e=[{x:0,y:p/2},{x:-P/2,y:-p/2},{x:P/2,y:-p/2}];function o(r,a){return{x:(r.x+a.x)/2,y:(r.y+a.y)/2}}if(f.length<4&&(f=[...e,o(e[0],e[1])]),f.length<m)for(let r=f.length-1;r<m;r++){let a=e[Math.floor(Math.random()*3)],t=o(f[r],a);f.push(t)}else f=f.splice(0,m);return f}function w(){const e=O(R,B);e.some(o=>!o)||([,i,h]=[e[0],e[1],e[2]],b=i.getAttribLocation(h,"aPosition"),C=i.getAttribLocation(h,"aPointSize"),S=i.getAttribLocation(h,"aColor"),E=i.createBuffer(),i.enableVertexAttribArray(b),i.enableVertexAttribArray(C),i.enableVertexAttribArray(S),x())}let z=[[.7,.7,0],[0,0,1],[0,1,0],[1,0,1],[0,1,1],[1,1,0],[.4,.6,.8],[.8,.3,.2],[.2,.8,.2]];function x(){const e=_();let o=M(p,P);const r=e.reduce((t,n,s)=>{const l=T(n,v,I);if(s<3)return t.push(l.x,l.y,10,0,0,1),t;let c=o(n.x,n.y);if(c==-1)return t.push(l.x,l.y,1,0,0,1),t;let d=z[c];return t.push(l.x,l.y,2,...d),t},[]);r.unshift(v.x,v.y,10,0,0,0);const a=new Float32Array(r);i.bindBuffer(i.ARRAY_BUFFER,E),i.bufferData(i.ARRAY_BUFFER,a,i.STATIC_DRAW),i.vertexAttribPointer(b,2,i.FLOAT,!1,24,0),i.vertexAttribPointer(C,1,i.FLOAT,!1,24,8),i.vertexAttribPointer(S,3,i.FLOAT,!1,24,12),i.drawArrays(i.POINTS,0,m+4)}function A(e){I=e,x()}function L(e,o){v[o]=e,x()}function D(){const e=document.getElementById("samplesInput"),o=document.getElementById("rotationInput"),r=document.getElementById("rotation"),a=document.getElementById("rotateReset"),t=document.getElementById("xRotationCenter"),n=document.getElementById("yRotationCenter"),s=document.getElementById("xCoord"),l=document.getElementById("yCoord");e.addEventListener("input",c=>{const d=document.getElementById("numberOfSamples");if(!c.target)return;const u=c.target;m=+u.value,d&&(d.textContent=(+u.value).toString()),x()}),a?.addEventListener("click",()=>{A(0)}),o.addEventListener("input",c=>{const d=c.target;r&&(r.textContent=d.value);const u=+d.value/180*Math.PI;A(u)}),t.addEventListener("input",c=>{const u=+c.target.value/100;L(u,"x"),s&&(s.textContent=u.toString())}),n.addEventListener("input",c=>{const u=+c.target.value/100;L(u,"y"),l&&(l.textContent=u.toString())})}w();D();
